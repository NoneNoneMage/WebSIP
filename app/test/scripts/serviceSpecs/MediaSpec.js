/*
*Copyright (c) 2013 Thomas Falkenberg.
*All rights reserved. This program and the accompanying materials
*are made available under the terms of the GNU Public License v3.0
*which accompanies this distribution, and is available at
*http://www.gnu.org/licenses/gpl.html
*
*Contributors:
*    Thomas Falkenberg - initial API and implementation
*    Deutsche Telekom AG- Telekom Laboratories Darmstadt
*/

// Generated by CoffeeScript 1.3.3
/*global define, describe, beforeEach, module, it, inject, expect
*/

define(['libs/angularMocks', 'services/Media'], function() {
  'use strict';
  return describe('Media service', function() {
    beforeEach(module('services'));
    

    it('should get correct Type', inject(['Media', function(Media) {
    	var media = new Media();
    	media.type="AV";
    	expect(media.getType()).toEqual({audio:true,video:true});
    	media.type="A";
    	expect(media.getType()).toEqual({audio:true,video:false});
    	media.type="AA";
    	expect(media.getType).toThrow("Wrong Media.type");
     }
   ]));
    
    it('should set src', inject(['Media', function(Media) {
    	var media = new Media();
    	expect(media.stream).toBeNull();
    	media.setSrc();
    	expect(media.src).toEqual("");

    	media.stream=new webkitMediaStream(true,true);
    	media.setSrc();
    	expect(media.src).not.toEqual("");
    	
    	media.type="A";
    	media.stream=new webkitMediaStream(true,false);
    	media.setSrc();
    	expect(media.src).not.toEqual("");
     }
   ]));
    
    it('should remove stream', inject(['Media', function(Media) {
    	var media = new Media();
		media.setSrc=jasmine.createSpy('setSrc Spy');
    	var stream=new webkitMediaStream(true,true);
    	media.stream=stream;
    	expect(media.setSrc).not.toHaveBeenCalled();
    	media.removeStream();
    	expect(media.stream).toBeNull();
    	expect(media.setSrc).toHaveBeenCalled();
    	
     }
   ]));
    
    it('should set stream', inject(['Media', function(Media) {
    	var media = new Media();
		media.setSrc=jasmine.createSpy('setSrc Spy');
    	var stream=new webkitMediaStream(true,true);
    	media.setStream(stream);
    	expect(media.stream).toBe(stream);
    	expect(media.setSrc).toHaveBeenCalled();
     }
   ]));
    
    it('should set stream by event', inject(['Media', function(Media) {
    	var media = new Media();
		media.setSrc=jasmine.createSpy('setSrc Spy');
    	var event={};
    	event.stream=new webkitMediaStream(true,true);
    	media.setStreamByEvent(event);
    	expect(media.stream).toBe(event.stream);
    	expect(media.setSrc).toHaveBeenCalled();
     }
   ]));
    
    
    it('should be initialized', inject(['Media', function(Media) {
    	var media = new Media();
    	expect(media.setStream).toBeDefined();
    	expect(media.setStreamByEvent).toBeDefined();
    	expect(media.removeStream).toBeDefined();
    	expect(media.getType).toBeDefined();
    	expect(media.setSrc).toBeDefined();
    	expect(media.type).toEqual("AV");
    	expect(media.stream).toBeNull();
    	expect(media.src).toEqual("");
    	expect(media.isLocal).toBeTruthy();
     }
   ]));
    
    return it('Media Service should be defined', inject([
      'Media', function(Media) {
        return expect(Media).toBeDefined();
      }
    ]));
  });
});
